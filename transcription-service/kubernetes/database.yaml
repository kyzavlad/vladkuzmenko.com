apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transcription-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcription-postgres
  labels:
    app: transcription-postgres
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transcription-postgres
  template:
    metadata:
      labels:
        app: transcription-postgres
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:14-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: transcription-db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: transcription-db-credentials
              key: password
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: transcription-config
              key: POSTGRES_DB
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: transcription-postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: transcription-postgres
  labels:
    app: transcription-postgres
spec:
  selector:
    app: transcription-postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transcription-rabbitmq-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcription-rabbitmq
  labels:
    app: transcription-rabbitmq
    component: queue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transcription-rabbitmq
  template:
    metadata:
      labels:
        app: transcription-rabbitmq
        component: queue
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.9-management-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5672
        - containerPort: 15672
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: transcription-rabbitmq-credentials
              key: username
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: transcription-rabbitmq-credentials
              key: password
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: transcription-rabbitmq-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: transcription-rabbitmq
  labels:
    app: transcription-rabbitmq
spec:
  selector:
    app: transcription-rabbitmq
  ports:
  - port: 5672
    targetPort: 5672
    name: amqp
  - port: 15672
    targetPort: 15672
    name: management
  type: ClusterIP 