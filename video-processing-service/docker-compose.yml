version: '3.8'

services:
  video-processing-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: video-processing-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./outputs:/app/outputs
      - ./temp:/app/temp
      - ./broll_library:/app/broll_library
      - ./models:/app/models
    env_file:
      - .env
    environment:
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - FFPROBE_PATH=/usr/bin/ffprobe
      - TEMP_PATH=/app/temp
      - OUTPUT_PATH=/app/outputs
      - LOG_LEVEL=INFO
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  redis:
    image: redis:alpine
    container_name: video-processing-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  minio:
    image: minio/minio
    container_name: video-processing-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

# Uncomment to add a simple UI (optional)
# video-processing-ui:
#   image: nginx:alpine
#   container_name: video-processing-ui
#   restart: unless-stopped
#   ports:
#     - "80:80"
#   volumes:
#     - ./ui:/usr/share/nginx/html
#     - ./nginx.conf:/etc/nginx/conf.d/default.conf
#   depends_on:
#     - video-processing-api

volumes:
  outputs:
  temp:
  broll_library:
  redis_data:
  minio_data: